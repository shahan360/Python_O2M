import random  # Import the random module to generate random numbers.

def run_guess(guess, answer):
    """
    Check if the user's guess is correct and within the valid range.

    Parameters:
    guess (int): The user's guess.
    answer (int): The correct answer randomly generated by the program.

    Returns:
    bool: True if the guess is correct, False otherwise.
    """
    # Ensure the guess is between 1 and 10 (inclusive)
    if 0 < guess < 11:
        # Check if the guess matches the correct answer
        if guess == answer:
            print('You are a genius!')  # Correct guess
            return True
    else:
        # Inform the user if their guess is outside the valid range
        print('Hey, I said the number should be between 1 and 10!')
        return False

# The main block ensures the game only runs when the script is executed directly,
# not when it's imported as a module for testing.
if __name__ == '__main__':
    # Generate a random number between 1 and 10 to be the correct answer
    answer = random.randint(1, 10)
    
    # Continuously prompt the user to guess until they guess correctly
    while True:
        try:
            # Get the user's guess and convert it to an integer
            guess = int(input('Guess a number between 1 and 10: '))
            
            # Run the guess through the checking function; break loop if correct
            if run_guess(guess, answer):
                break
        except ValueError:
            # Handle the case where the user inputs something that is not a number
            print('Please enter a valid number.')
            continue  # Ask for input again

"""
Explanation:

- This program is a simple guessing game where the user has to guess a number between 1 and 10.
- The `run_guess()` function ensures that the user's guess is valid and checks if it's correct.
- The game loop continues until the correct number is guessed.
- Using the `if __name__ == '__main__'` block ensures that the game only runs when the script is executed, not when imported for testing.

Unit Testing Concept:
- We can test individual functions (like `run_guess`) without having the entire game run.
- This is why we separate the main game logic and use the `if __name__ == '__main__'` block.
- Functions like `run_guess()` are designed to be pure, meaning they return a result without side effects, making them easier to test.
"""
